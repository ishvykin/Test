//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestMVCApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TESTEntities : DbContext
    {
        public TESTEntities()
            : base("name=TESTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GOODS> GOODS { get; set; }
    
        public virtual ObjectResult<SELECT_GOODS_Result> SELECT_GOODS(string filter)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_GOODS_Result>("SELECT_GOODS", filterParameter);
        }
    
        public virtual ObjectResult<string> UPDATE_GOOD_PRICE(Nullable<int> good_id, Nullable<double> price)
        {
            var good_idParameter = good_id.HasValue ?
                new ObjectParameter("good_id", good_id) :
                new ObjectParameter("good_id", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UPDATE_GOOD_PRICE", good_idParameter, priceParameter);
        }
    }
}
